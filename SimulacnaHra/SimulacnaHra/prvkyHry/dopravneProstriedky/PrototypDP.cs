///////////////////////////////////////////////////////////
//  PrototypDP.cs
//  Implementation of the Class PrototypDP
//  Generated by Enterprise Architect
//  Created on:      17-2-2016 17:13:23
//  Original author: Dobroslav Grygar
///////////////////////////////////////////////////////////


using System;
using SimulacnaHra.hra;
using SimulacnaHra.prvkyHry.mapa;
using SimulacnaHra.prvkyHry.vyroba;

namespace SimulacnaHra.prvkyHry.dopravneProstriedky {

    /// <summary>
    /// Abstraktn˝ predok jednotliv˝ch typov vozidiel
    /// </summary>
    [Serializable]
    public abstract class PrototypDp : ZakladObrazku
    {
        private Poloha aPoloha;
        public String Nazov { get; set; }
        public int Cena { get; set; }
        public int Kapacita { get; set; }
        public int Rychlost { get; set; }
        public TypPrepravJednotky TypNakladu { get; set; }
        public bool Stoji { get; set; }
        public bool Strateny { get; set; }

        /// <summary>
        /// Po koæk˝ch FPS sa m· posun˙ù obr·zok
        /// </summary>
        internal int FramePohyb {
            get
            {
                double n = ((Math.Log((double)1600 / Rychlost)) / (Math.Log(2)));
                return (int)(3 * Math.Pow(2, n - 1));
            }
	    }

        /// <summary>
        /// Poloha + jej preposlanie vykresæovacej triede
        /// </summary>
	    public Poloha Poloha {
            get { return aPoloha; }
            set
            {
                aPoloha = value;
                OdsadenieZHora = aPoloha.Riadok*Policko.cVelkostPolicka;
                OdsadenieZLava = aPoloha.Stlpec*Policko.cVelkostPolicka;
            }
        }

        /// <summary>
        /// Konöetruktor s parametrami
        /// </summary>
        /// <param name="paPoloha"></param>
        /// <param name="paTypPreprJ"></param>
        /// <param name="paKapacita"></param>
        /// <param name="paRychlost"></param>
        /// <param name="paCena"></param>
        /// <param name="paNazov"></param>
	    protected PrototypDp(Poloha paPoloha, TypPrepravJednotky paTypPreprJ, int paKapacita, int paRychlost, int paCena, String paNazov)
        {
            Cena = paCena;
            Kapacita = paKapacita;
            Rychlost = paRychlost;
            Poloha = paPoloha;
            Nazov = paNazov;
	        TypNakladu = paTypPreprJ;
            JeVCieli = false;
	        Strateny = false;
        }

        /// <summary>
        /// KopÌrovacÌ konötruktor
        /// </summary>
        /// <param name="paPredloha">Predloha</param>
	    protected PrototypDp(PrototypDp paPredloha)
	    {
            Cena = paPredloha.Cena;
            Kapacita = paPredloha.Kapacita;
            Rychlost = paPredloha.Rychlost;
            Poloha = paPredloha.Poloha;
            Nazov = paPredloha.Nazov;
            TypNakladu = paPredloha.TypNakladu;
	        JeVCieli = false;
	        Strateny = false;
	    }

        /// <summary>
        /// PodrodnÈ infornÌcie o danom prepravonom vozidle
        /// </summary>
        /// <returns></returns>
	    public string PodrobneInfo()
	    {
	        return "Nazov: " + Nazov + "\r\n" +
	               "Cena: " + Cena + "Ä\r\n" +
	               "Kapacita " + Kapacita + " " + TypNakladu + "\r\n" +
	               "Rychlost " + Rychlost + " km/h\r\n";
	    }

        /// <summary>
        /// druh vozidla - ktor˙ infraötrikt˙ru vyuûÌva
        /// </summary>
	    public DruhVozidla Druh { get; set; }

        /// <summary>
        /// Inform·cia Ëi je v cieli
        /// </summary>
	    public bool JeVCieli { get; set; }

	    /// <summary>
	    /// Vyhæadanie trasy - kaûd˝ potomok si to rieöi samostatne
	    /// </summary>
	    /// <param name="paPolohaDo"></param>
	    /// <returns></returns>
	    public abstract bool NajdiTrasu(Poloha paPolohaDo);

        /// <summary>
        /// Vakonanie pohybu - kaûd˝ potomok si to rieöi samostatne
        /// </summary>
		public abstract void VykonajPohyb();

        /// <summary>
        /// Zastavenie - kaûd˝ potomok si to rieöi samostatne
        /// </summary>
        /// <returns>Ëi mÙûe teraz zastaviù</returns>
		public abstract bool Zastav();

	    public abstract override string ToString();

	}//end PrototypDP

}//end namespace dopravneProstriedky