///////////////////////////////////////////////////////////
//  Lod.cs
//  Implementation of the Class Lod
//  Generated by Enterprise Architect
//  Created on:      17-2-2016 17:13:21
//  Original author: Dobroslav Grygar
///////////////////////////////////////////////////////////

using System;
using SimulacnaHra.gui;
using SimulacnaHra.hra;
using SimulacnaHra.matematika;
using SimulacnaHra.prvkyHry.infrastruktura;
using SimulacnaHra.prvkyHry.vyroba;
using SimulacnaHra.Properties;

namespace SimulacnaHra.prvkyHry.dopravneProstriedky {

    /// <summary>
    /// LoÔ pl·va po polÌËkach s vodou
    /// </summary>
    [Serializable]
	public class Lod : PrototypDp
	{

	    private int aAktualnyFrame;
	    private Poloha aPolohaDo;
	    private int aPokusyNahPoh;
	    private bool aPreferenciaPohybu;

        public Lod(Poloha paPoloha, TypPrepravJednotky paTypPreprJ, int paKapacita, int paRychlost, int paCena, String paNazov)
            : base(paPoloha, paTypPreprJ, paKapacita, paRychlost, paCena, paNazov)
        {
            DokonciVytvaranie();
        }

	    public Lod(PrototypDp paPredloha) : base(paPredloha)
	    {
            DokonciVytvaranie();
	    }

        /// <summary>
        /// dokonËenie vytv·rania
        /// </summary>
	    private void DokonciVytvaranie()
	    {
            Druh = DruhVozidla.vodne;
            NastavObrazok(Resources.lodDole, "lodDole");
	        aPokusyNahPoh = 0;
	        aPreferenciaPohybu = true;

            aAktualnyFrame = 0;
            JeVCieli = true;
            Skryte = false;
	    }

	    public override bool NajdiTrasu(Poloha paPolohaDo)
        {
            JeVCieli = false;
            aPolohaDo = paPolohaDo;
            return true;
        }

        /// <summary>
        /// Vykonanie pohybu. Vie sa ËiastoËne vyh˝baù prek·ûkam a ËiastoËne hæadaù trasu,
        /// preto potrebuje vodiace bÛje, ktorÈ musia byù umiestnenÈ "dostatoËne" spr·vne...
        /// </summary>
        public override void VykonajPohyb()
        {
            if (Strateny) return;
            if (aAktualnyFrame == FramePohyb)
            {
                bool podarilosa = aPreferenciaPohybu ? PohybPreferencia1() : PohybPreferencia2();

                if (podarilosa)
                {
                }
                else if (Poloha.Stlpec > aPolohaDo.Stlpec || Poloha.Stlpec < aPolohaDo.Stlpec ||
                         Poloha.Riadok > aPolohaDo.Riadok || Poloha.Riadok < aPolohaDo.Riadok)
                {
                    aPokusyNahPoh = 0;
                    NahodnyPohyb();
                    ZmenPreferenciu();
                }
                else
                {
                    JeVCieli = true;
                    Zastav();
                }
                if (Strateny)
                {
                    Sprava.Info("LoÔ sa stratila");
                    Kamera.DajInstanciu().VycentrujPohlad(Poloha);
                }
                aAktualnyFrame = 0;
            }
            aAktualnyFrame++;
        }

        /// <summary>
        /// V˝mena preferencie pohybu po niektorej z osÌ.
        /// Pom·ha vyh˝baniu prek·ûkam.
        /// </summary>
	    private void ZmenPreferenciu()
	    {
	        aPreferenciaPohybu = !aPreferenciaPohybu;
	    }

        /// <summary>
        /// Preferencia pohybu 1
        /// </summary>
        /// <returns>vr·ti Ëi sa podarilo</returns>
	    private bool PohybPreferencia1()
	    {
            if (PohybVlavo(true)) ;
            else if (PohybVpravo(true)) ;
            else if (PohybHore(true)) ;
            else if (PohybDole(true)) ;
            else return false;
            return true;
        }

        /// <summary>
        /// Preferencia pohybu 2
        /// </summary>
        /// <returns>vr·ti Ëi sa podarilo</returns>
        private bool PohybPreferencia2()
        {
            if (PohybHore(true)) ;
            else if (PohybDole(true)) ;
            else if (PohybVlavo(true)) ;
            else if (PohybVpravo(true)) ;
            else return false;
            return true;
        }

        /// <summary>
        /// Pohyb smerom vlovo
        /// </summary>
        /// <param name="paZavisiOdCiela">Ëi pohyb z·visÌ od cieæa - teda Ëi sa snaûÌ priblÌûiù ku cieæu, alebo nie</param>
        /// <returns>Ëi sa pohyb podaril</returns>
	    private bool PohybVlavo(bool paZavisiOdCiela)
	    {
            if (paZavisiOdCiela)
	        {
                if (Poloha.Stlpec > aPolohaDo.Stlpec && Pohyb(new Poloha(Poloha.Riadok, Poloha.Stlpec - 1)))
                {
                    NastavObrazok(Resources.lodVlavo, "lodVlavo");
                    return true;
                }
                return false;
	        }
	        if (Pohyb(new Poloha(Poloha.Riadok, Poloha.Stlpec - 1)))
	        {
                NastavObrazok(Resources.lodVlavo, "lodVlavo");
	            return true;
	        }
	        return false;
	    }

        /// <summary>
        /// Pohyb smerom vpravo
        /// </summary>
        /// <param name="paZavisiOdCiela">Ëi pohyb z·visÌ od cieæa - teda Ëi sa snaûÌ priblÌûiù ku cieæu, alebo nie</param>
        /// <returns>Ëi sa pohyb podaril</returns>
        private bool PohybVpravo(bool paZavisiOdCiela)
	    {
            if (paZavisiOdCiela)
            {
                if (Poloha.Stlpec < aPolohaDo.Stlpec && Pohyb(new Poloha(Poloha.Riadok, Poloha.Stlpec + 1)))
                {
                    NastavObrazok(Resources.lodVpravo, "lodVpravo");
                    return true;
                }
                return false;
            }

            if (Pohyb(new Poloha(Poloha.Riadok, Poloha.Stlpec + 1)))
            {
                NastavObrazok(Resources.lodVpravo, "lodVpravo");
                return true;
            }
            return false;

	    }

        /// <summary>
        /// Pohyb smerom hore
        /// </summary>
        /// <param name="paZavisiOdCiela">Ëi pohyb z·visÌ od cieæa - teda Ëi sa snaûÌ priblÌûiù ku cieæu, alebo nie</param>
        /// <returns>Ëi sa pohyb podaril</returns>
        private bool PohybHore(bool paZavisiOdCiela)
	    {
            if (paZavisiOdCiela)
            {
                if (Poloha.Riadok > aPolohaDo.Riadok && Pohyb(new Poloha(Poloha.Riadok - 1, Poloha.Stlpec)))
                {
                    NastavObrazok(Resources.lodHore, "lodHore");
                    return true;
                }
                return false;
            }
            if (Pohyb(new Poloha(Poloha.Riadok - 1, Poloha.Stlpec)))
            {
                NastavObrazok(Resources.lodHore, "lodHore");
                return true;
            }
	        return false;
	    }

        /// <summary>
        /// Pohyb smerom dole
        /// </summary>
        /// <param name="paZavisiOdCiela">Ëi pohyb z·visÌ od cieæa - teda Ëi sa snaûÌ priblÌûiù ku cieæu, alebo nie</param>
        /// <returns>Ëi sa pohyb podaril</returns>
        private bool PohybDole(bool paZavisiOdCiela)
	    {
            if (paZavisiOdCiela)
            {
                if (Poloha.Riadok < aPolohaDo.Riadok && Pohyb(new Poloha(Poloha.Riadok + 1, Poloha.Stlpec)))
                {
                    NastavObrazok(Resources.lodDole, "lodDole");
                    return true;
                }
                return false;
            }
            if (Pohyb(new Poloha(Poloha.Riadok + 1, Poloha.Stlpec)))
            {
                NastavObrazok(Resources.lodDole, "lodDole");
                return true;
            }
	        return false;
	    }

        /// <summary>
        /// Ôalöia z pohybov˝ch funkciÌ
        /// </summary>
        /// <param name="paPoloha">poloha kam</param>
        /// <returns>Ëi sa podarilo</returns>
	    private bool Pohyb(Poloha paPoloha)
	    {
            if (!Hra.DajInstanciu().DajHernuPlochu().DajMaticu()[paPoloha.Riadok, paPoloha.Stlpec].Pevnina)
	        {

                Poloha = paPoloha;
	            return true;
            }
            else if (Hra.DajInstanciu().DajHernuPlochu().DajMaticu()[paPoloha.Riadok, paPoloha.Stlpec].Zastavane is Dok)
	        {
                Poloha = paPoloha;
                return true;
	        }
	        return false;
	    }
        
        /// <summary>
        /// Vykonanie n·hodnÈho pohybu.
        /// Ak sa nepodarÌ vykonaù n·hodn˝ pohyb 20x,
        /// tak sa loÔ stratÌ
        /// </summary>
	    private void NahodnyPohyb()
	    {
	        if (aPokusyNahPoh < 20)
	        {
	            aPokusyNahPoh++;
	            int poradie = Nahoda.NahodnyInt(0, 4);
	            bool vysledok = false;

                switch (poradie)
	            {
                    case 0:
	                    vysledok = PohybHore(false);
	                    break;

                    case 1:
                        vysledok = PohybDole(false);
                        break;

                    case 2:
                        vysledok = PohybVlavo(false);
                        break;

                    case 3:
                        vysledok = PohybVpravo(false);
                        break;
	            }
	            if (!vysledok)
	            {
                    NahodnyPohyb();
	            }
	        }
	        else
	        {
                aPokusyNahPoh = 0;
	            Strateny = true;
	        }
	    }

	    public override bool Zastav()
	    {
	        return true;
	    }

        public override string ToString()
        {
            return "Lod: " + Nazov;
        }
    }//end Lod

}//end namespace dopravneProstriedky