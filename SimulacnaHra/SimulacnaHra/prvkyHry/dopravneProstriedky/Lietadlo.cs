///////////////////////////////////////////////////////////
//  Lietadlo.cs
//  Implementation of the Class Lietadlo
//  Generated by Enterprise Architect
//  Created on:      17-2-2016 17:13:21
//  Original author: Dobroslav Grygar
///////////////////////////////////////////////////////////

using System;
using SimulacnaHra.hra;
using SimulacnaHra.prvkyHry.vyroba;
using SimulacnaHra.Properties;

namespace SimulacnaHra.prvkyHry.dopravneProstriedky {

    /// <summary>
    /// Trieda, ktorá reprezentuje lietalo
    /// </summary>
    [Serializable]
	public class Lietadlo : PrototypDp
	{
	    private Poloha aPolohaDo;
	    private int aAktualnyFrame;

        public Lietadlo(Poloha paPoloha, TypPrepravJednotky paTypPreprJ, int paKapacita, int paRychlost, int paCena, String paNazov)
            : base(paPoloha, paTypPreprJ, paKapacita, paRychlost, paCena, paNazov)
        {
            DokonciVytvaranie();
		}

	    public Lietadlo(PrototypDp paPredloha) : base(paPredloha)
	    {
            DokonciVytvaranie();
	    }

        /// <summary>
        /// Dokonèenie vytváranie objektu, 
        /// lebo má 2 konštruktory
        /// </summary>
	    private void DokonciVytvaranie()
	    {
            Druh = DruhVozidla.vzdusne;
            NastavObrazok(Resources.lietadloHore, "lietadloHore");

            aAktualnyFrame = 0;
	        JeVCieli = true;
            Skryte = false;
	    }

        /// <summary>
        /// Vyh¾adanie trasy
        /// </summary>
        /// <param name="paPolohaDo"></param>
        /// <returns></returns>
        public override bool NajdiTrasu(Poloha paPolohaDo)
        {
            JeVCieli = false;
            aPolohaDo = new Poloha(paPolohaDo.Riadok+1, paPolohaDo.Stlpec+1);
            return true;
        }

        /// <summary>
        /// Vykonanie pohybu
        /// </summary>
        public override void VykonajPohyb()
        {
            if (aAktualnyFrame == FramePohyb)
            {
                if (Poloha.Stlpec > aPolohaDo.Stlpec)
                {
                    NastavObrazok(Resources.lietadloVlavo, "lietadloVlavo");
                    Poloha = new Poloha(Poloha.Riadok, Poloha.Stlpec-1);
                }
                else if (Poloha.Stlpec < aPolohaDo.Stlpec)
                {
                    Poloha = new Poloha(Poloha.Riadok, Poloha.Stlpec + 1);
                    NastavObrazok(Resources.lietadloVpravo, "lietadloVpravo");
                }
                else if (Poloha.Riadok > aPolohaDo.Riadok)
                {
                    NastavObrazok(Resources.lietadloHore, "lietadloHore");
                    Poloha = new Poloha(Poloha.Riadok-1, Poloha.Stlpec);
                }
                else if (Poloha.Riadok < aPolohaDo.Riadok)
                {
                    NastavObrazok(Resources.lietadloDole, "lietadloDole");
                    Poloha = new Poloha(Poloha.Riadok + 1, Poloha.Stlpec);
                }
                else
                {
                    JeVCieli = true;
                }
                aAktualnyFrame = 0;
            }
            aAktualnyFrame++;
        }

        /// <summary>
        /// Lietadlo môže zastavi¾, 
        /// len keï je na zemi... logicky :D
        /// </summary>
        /// <returns></returns>
        public override bool Zastav()
        {
            if (JeVCieli)
            {
                return true;
            }
            return false;
        }

        public override string ToString()
        {
            return "Lietadlo: " + Nazov;
        }
    }//end Lietadlo

}//end namespace dopravneProstriedky