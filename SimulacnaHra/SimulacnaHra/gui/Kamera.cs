///////////////////////////////////////////////////////////
//  Kamera.cs
//  Implementation of the Class Kamera
//  Generated by Enterprise Architect
//  Created on:      17-2-2016 17:13:21
//  Original author: Dobroslav Grygar
///////////////////////////////////////////////////////////

using System;
using SimulacnaHra.hra;
using SimulacnaHra.prvkyHry.mapa;
using SimulacnaHra.prvkyHry.ovladanie;


namespace SimulacnaHra.gui {

    /// <summary>
    /// Trieda Kamera sl˙ûi na res˙vanie pohæadu po hernej ploche.
    /// Vöetko Ëo sa zobrazuje musÌ spadaù pod jej v˝rez
    /// </summary>

    public class Kamera {

        private static Kamera aKamera;
        private Poloha aPoloha;
        public int OdsadenieX { get { return aPoloha.Stlpec; } }
        public int OdsadenieY { get { return aPoloha.Riadok; } }

        public const int cPocetOkienRiadky = 16;
        public const int cPocetOkienStplce = 30;

        /// <summary>
        /// Singleton - pri vytovarenÌ je kamera na 0,0 pozÌciÌ
        /// </summary>
        private Kamera()
        {
            aPoloha = new Poloha(0, 0);
		}

        /// <summary>
        /// Vr·ti inötanciu kamery
        /// </summary>
        /// <returns>Vracia svoju inötanciu</returns>
        public static Kamera DajInstanciu(){
            if (aKamera == null) {
                aKamera = new Kamera();
            }
            return aKamera;
        }

        /// <summary>
        /// Pohyb kamery smerom nahor
        /// </summary>
        public void Hore() {
            if(aPoloha.Riadok !=0){
                aPoloha.Riadok--;
            }
        }

        /// <summary>
        /// Pohyb kamery smerom nadol
        /// </summary>
        public void Dole() {
            if (aPoloha.Riadok != HernaPlocha.PocetRiadkov - cPocetOkienRiadky + PozadieMenu.cPosunZVrchu)
            {
                aPoloha.Riadok++;
            }
        }

        /// <summary>
        /// Pohyb kamery smerom vlavo
        /// </summary>
        public void VLavo()
        {
            if (aPoloha.Stlpec != 0)
            {
                aPoloha.Stlpec--;
            }
        }

        /// <summary>
        /// Pohyb kamery smerom vpravo
        /// </summary>
        public void VPravo()
        {
            if (aPoloha.Stlpec != HernaPlocha.PocetStlpcov - cPocetOkienStplce + PozadieMenu.cPosunZBoku)
            {
                aPoloha.Stlpec++;
            }
        }

        /// <summary>
        /// Vycentruje pohæad kamery na zadanÈ s˙radnice. 
        /// Ak je to moûnÈ, tak objekt umiestni do stredu obrazovky
        /// </summary>
        /// <param name="paPoloha">Poloha na ktor˙ sa m· vycentrovaù</param>
	    public void VycentrujPohlad(Poloha paPoloha)
	    {
            int odsadenieStlpec = paPoloha.Stlpec + PozadieMenu.cPosunZBoku - cPocetOkienStplce / 2;
            int odsadenieRiadok = paPoloha.Riadok + PozadieMenu.cPosunZVrchu - cPocetOkienRiadky / 2;

            if (odsadenieStlpec < 0)
            {
                odsadenieStlpec = 0;
            }
            else if (odsadenieStlpec > HernaPlocha.PocetStlpcov-cPocetOkienStplce + PozadieMenu.cPosunZBoku)
            {
                odsadenieStlpec = HernaPlocha.PocetStlpcov - cPocetOkienStplce + PozadieMenu.cPosunZBoku;
            }
	        
            if (odsadenieRiadok < 0)
            {
                odsadenieRiadok = 0;
            }
            else if (odsadenieRiadok > HernaPlocha.PocetRiadkov - cPocetOkienRiadky + PozadieMenu.cPosunZVrchu)
            {
                odsadenieRiadok = HernaPlocha.PocetRiadkov - cPocetOkienRiadky + PozadieMenu.cPosunZVrchu;
            }

            aPoloha.Stlpec = odsadenieStlpec;
            aPoloha.Riadok = odsadenieRiadok; 
	    }

	}//end Kamera

}//end namespace gui