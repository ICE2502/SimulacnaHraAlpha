///////////////////////////////////////////////////////////
//  Hra.cs
//  Implementation of the Class Hra
//  Generated by Enterprise Architect
//  Created on:      17-2-2016 17:13:21
//  Original author: Dobroslav Grygar
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using SimulacnaHra.gui;
using SimulacnaHra.prvkyHry.infrastruktura;
using SimulacnaHra.prvkyHry.mapa;
using SimulacnaHra.prvkyHry.vyroba;
using SimulacnaHra.spravaZvuku;

namespace SimulacnaHra.hra {

    /// <summary>
    /// Trieda ktor· m· na starosti priebeh hry
    /// udrûuje hern˙ plochu, poskytuje potrebnÈ sluûby
    /// </summary>
	public class Hra {

        private int aDen;
		private DateTime aDatum;
		private Spolocnost aSpolocnost;
		private List<Vyroba> aVyroba;
        private List<Mesto> aMesta;
        private HernaPlocha aHranaPlocha;
        private static Hra aInstanciaHry;
        private OknoAplikacie aOkno;
        private const int cDlzkaDna = OknoAplikacie.cFPS*3;
        private int aPocetTikov;

        /// <summary>
        /// Vr·ti zoznam miest
        /// </summary>
        public List<Mesto> ZoznamMiest { get { return aMesta; } }
        /// <summary>
        /// Vr·ti aktu·lny deÚ
        /// </summary>
        public int Den { get { return aDen; } }
        /// <summary>
        /// Vr·ti spoloËnosù
        /// </summary>
        public Spolocnost Spolocnost { get { return aSpolocnost; } }
        /// <summary>
        /// Zoznam v˝roby
        /// </summary>
	    public List<Vyroba> ZoznamVyroby { get { return aVyroba; }}

        /// <summary>
        /// Konötruktor inicializuje vöetko potrebnÈ a p˙öùa hudbu
        /// </summary>
	    private Hra(){

            aSpolocnost = new Spolocnost("Transportna spolocnost");
            aHranaPlocha = new HernaPlocha();
            aOkno = OknoAplikacie.DajInstanciu();

            aMesta = new List<Mesto>();
            aVyroba = new List<Vyroba>();

            aMesta = aHranaPlocha.ZoznamMiest;
            aVyroba = aHranaPlocha.ZoznamVyroby;
            aDen = 0;
	    }

        /// <summary>
        /// Vr·ti vlastn˙ inötanciu
        /// </summary>
        /// <returns></returns>
        public static Hra DajInstanciu() {
            if (aInstanciaHry == null) {
                aInstanciaHry = new Hra();
            }
            return aInstanciaHry;
        }

        /// <summary>
        /// 
        /// </summary>
		public void Nacitaj(){

		}

        /// <summary>
        /// Preruöenie hry
        /// </summary>
		public void Pauza(){
            aOkno.Pauza();
		}

        /// <summary>
        /// PokraËovanie hry
        /// </summary>
		public void Start(){
            aOkno.Start();
		}

        /// <summary>
        /// 
        /// </summary>
		public void Uloz(){

		}

        /// <summary>
        /// Vr·ti hern˙ plochu
        /// </summary>
        /// <returns>hren· plocha</returns>
        public HernaPlocha DajHernuPlochu() {
            return aHranaPlocha;
        }

        /// <summary>
        /// Posiela spr·vy ûe preËla Ëasov· jednotka
        /// </summary>
        public void Tik() {
            aPocetTikov++;
            if (aPocetTikov == cDlzkaDna)
            {
                aDen++;
                aPocetTikov = 0;

                foreach (Mesto toto in aMesta)
                {
                    toto.PrechodDna();
                }

                foreach(Vyroba tato in aVyroba)
                {
                    tato.Vyrob();
                }
            }
        }
	}//end Hra

}//end namespace Hra