///////////////////////////////////////////////////////////
//  Spolocnost.cs
//  Implementation of the Class Spolocnost
//  Generated by Enterprise Architect
//  Created on:      17-2-2016 17:13:22
//  Original author: Dobroslav Grygar
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using gui;
using SimulacnaHra.prvkyHry.dopravneProstriedky;
using SimulacnaHra.prvkyHry.infrastruktura;

namespace SimulacnaHra.hra {

    /// <summary>
    /// SpoloËnosù je Ëasù hry, ktor˙ ovl·da hr·Ë, 
    /// star· sa o jej prosperovanie
    /// </summary>
	public class Spolocnost {

		private List<DopravnyProstriedok> aDopravneProstriedky;
		private static int aFinincie;
		private List<Infrastruktura> aInfrastruktura;
		private string aNazov;
		private List<ZoskupenieStanic> aStanice;
		private Dictionary<int, int> aVyvojFinincii;
	    public DopravnyProstriedok UpravovanyDP { get; set; }

        /// <summary>
        /// Vr·ti stav financiÌ
        /// </summary>
	    public int Financie { get { return aFinincie; } }

        /// <summary>
        /// Vr·ti zoznam StanÌc, ktorÈ vlastnÌ hr·Ë
        /// </summary>
	    public List<ZoskupenieStanic> Stanice {
	        get { return aStanice; }
	    }

        /// <summary>
        /// Vr·ti zoznam DopravneProstriedky, ktorÈ vlastnÌ hr·Ë
        /// </summary>
	    public List<DopravnyProstriedok> DopravneProstriedky {
	        get { return aDopravneProstriedky; }
	    }

	    /// <summary>
	    /// Inicializ·cia spoloËnosti
	    /// </summary>
	    /// <param name="paNazov">Reùazec znakov - n·zov spoloËnosti</param>
		public Spolocnost(String paNazov){
            aNazov = paNazov;
            aFinincie = 2000000;
            aStanice = new List<ZoskupenieStanic>();
            aDopravneProstriedky = new List<DopravnyProstriedok>();
		}

	    /// <summary>
	    /// Overenie, Ëi je moûnÈ vykonaù ˙pravu financiÌ
	    /// </summary>
	    /// <param name="paSuma">suma - celÈ ËÌslo</param>
	    /// <returns>Ëi sa d·, alebo nie</returns>
		public static bool OverVydavok(int paSuma)
        {

            if (aFinincie+paSuma <= 0)
            {
                Sprava.Info("Nedostatok financiÌ!");
                return false;
            }

            return true;
		}

		/// <summary>
		/// ˙prava financiÌ spoloËnosti
		/// </summary>
        /// <param name="paSuma">suma - celÈ ËÌslo</param>
		/// <returns>Ëi sa podarilo vykonaù</returns>
		public static bool UpravFinancie(int paSuma)
        {
            if (OverVydavok(paSuma)) {
                aFinincie += paSuma;
                return true;
            }
            return false;
		}

        /// <summary>
        /// Pridanie dopravnÈhom prostriedku
        /// </summary>
        /// <param name="paDP"></param>
        public void PridajDP(DopravnyProstriedok paDP) 
        {
            aDopravneProstriedky.Add(paDP);
        }

        /// <summary>
        /// Zmazani dopravnÈho prostriedku
        /// </summary>
        /// <param name="paDP"></param>
        public void ZmazDP(DopravnyProstriedok paDP)
        {
            aDopravneProstriedky.Remove(paDP);
        }

        /// <summary>
        /// Pridanie zoskupenia stanÌc
        /// </summary>
        /// <param name="paZosk">zoskupenie</param>
        public void PridajStanicu(ZoskupenieStanic paZosk) 
        {
            if (!aStanice.Contains(paZosk))
            {
                aStanice.Add(paZosk);
            }
        }

        /// <summary>
        /// Vamazanie zoskupenia stanÌc
        /// </summary>
        /// <param name="paZosk">zoskupenie</param>
        public void VymazZoskupenie(ZoskupenieStanic paZosk)
        {
            aStanice.Remove(paZosk);
        }
	}//end Spolocnost

}//end namespace Hra